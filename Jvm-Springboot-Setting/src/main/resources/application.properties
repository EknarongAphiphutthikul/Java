server.servlet.context-path=/example
server.port=${APP_PORT}
server.tomcat.uri-encoding=UTF-8
server.tomcat.max-connections=${APP_MAX_CONNECTION}
server.tomcat.threads.max=${APP_MAX_THREADS}

log.performance.enable=${LOG_PERFORMANCE_ENABLE:D}
log.file.enable=${LOG_FILE_ENABLE:E}


# APP_LOG_LEVEL = DEBUG, INFO, WARN, ERROR, FATAL
app.log.level=${APP_LOG_LEVEL}
pod.name=${KUBERNETES_PODNAME}
cluster.name=${KUBERNETES_NAMESPACE}
ms.name=jvm-springboot-setting


kafka.topic=${KAFKA_TOPIC}

kafka.server.port=${KAFKA_SERVER_PORT}
kafka.username=${KAFKA_USERNAME}
kafka.password=${KAFKA_PASSWORD}
kafka.truststore.location=${KAFKA_TRUSTSTORE_LOCATION}
kafka.truststore.password=${KAFKA_TRUSTSTORE_PASSWORD}
kafka.producer.acks=${KAFKA_PRODUCER_ACKS:1}
kafka.producer.enable.idempotence.flag=${KAFKA_PRODUCER_ENABLE_IDEMPOTENCE_FLAG:Y}
kafka.producer.max.in.flight.req.per.conn=${KAFKA_PRODUCER_MAX_IN_FLIGHT_REQ_PER_CONN:5}
kafka.producer.conn.max.idle.ms=${KAFKA_PRODUCER_CONN_MAX_IDLE_MS:540000}
kafka.producer.batch.size=${KAFKA_PRODUCER_BATCH_SIZE:16384}
kafka.producer.linger.ms=${KAFKA_PRODUCER_LINGER_MS:0}
kafka.producer.buffer.memory=${KAFKA_PRODUCER_BUFFER_MEMORY:33554432}
kafka.producer.compressiontype.flag=${KAFKA_PRODUCER_COMPRESSION_TYPE_FLAG:N}
kafka.producer.max.block.ms=${KAFKA_PRODUCER_MAX_BLOCK_MS:60000}
kafka.producer.send.buffer.bytes=${KAFKA_PRODUCER_SEND_BUFFER_BYTES:131072}
kafka.producer.receive.buffer.bytes=${KAFKA_PRODUCER_RECEIVE_BUFFER_BYTES:32768}
kafka.consumer.thread=${KAFKA_CONSUMER_THREAD:5}
kafka.consumer.poll.ms=${KAFKA_CONSUMER_POLL_MS:300000}
kafka.consumer.max.poll.records=${KAFKA_CONSUMER_MAX_POLL_RECORDS:${kafka.consumer.thread}}
kafka.consumer.conn.max.idle.ms=${KAFKA_CONSUMER_CONN_MAX_IDLE_MS:540000}
kafka.consumer.send.buffer.bytes=${KAFKA_CONSUMER_SEND_BUFFER_BYTES:131072}
kafka.consumer.receive.buffer.bytes=${KAFKA_CONSUMER_RECEIVE_BUFFER_BYTES:102400}
kafka.consumer.fetch.max.wait.ms=${KAFKA_CONSUMER_FETCH_MAX_WAIT_MS:500}
kafka.consumer.fetch.min.bytes=${KAFKA_CONSUMER_FETCH_MIN_BYTES:1}
kafka.consumer.fetch.max.bytes=${KAFKA_CONSUMER_FETCH_MAX_BYTES:52428800}
kafka.consumer.max.partition.fetch.bytes=${KAFKA_CONSUMER_MAX_PARTITION_FETCH_BYTES:1048576}
kafka.consumer.heartbeat.interval.ms=${KAFKA_CONSUMER_HEARTBEAT_INTERVAL_MS:3000}
kafka.consumer.session.timeout.ms=${KAFKA_CONSUMER_SESSION_TIMEOUT_MS:45000}
kafka.consumer.auto.offset.reset=${KAFKA_CONSUMER_AUTO_OFFSET_RESET:latest}

redis.max.pool.total=${REDIS_MAX_POOL_TOTAL}
redis.max.pool.idle=${REDIS_MAX_POOL_IDLE}
redis.min.pool.idle=${REDIS_MIN_POOL_IDLE}
redis.min.evictable.idle.time.millis=${REDIS_MIN_EVIC_IDLE_TIME_MILLIS}
redis.time.between.eviction.runs.millis=${REDIS_TIME_BETWEEN_EVIC_RUNS_MILLIS}
redis.num.tests.per.eviction.run=${REDIS_NUM_TESTS_PER_EVIC_RUN}
redis.sentinel.address=${REDIS_SENTINEL_ADDRESS}
redis.master.name=${REDIS_MASTER_NAME}
redis.password=${REDIS_PASSWORD}
redis.sentinel.password=${REDIS_SENTINEL_PASSWORD}
redis.max.wait.millis=${REDIS_MAX_WAIT_MILLIS}

custom.log.file.path=/home/appuser/applog/
custom.log.file.name=jvm-springboot-setting

spring.main.banner-mode=off
spring.jpa.open-in-view=false

#Health
management.endpoints.web.exposure.include=metrics, health, info, prometheus
management.endpoint.health.show-details=always
management.health.db.enabled=false
management.health.diskspace.enabled=false